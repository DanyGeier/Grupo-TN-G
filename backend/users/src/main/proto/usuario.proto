syntax = "proto3";

package com.grupog;

option java_multiple_files = true;
option java_package = "com.grupog";

//Definicion de roles
enum Rol {
	PRESIDENTE = 0;
	VOCAL = 1;
	COORDINADOR = 2;
	VOLUNTARIO = 3;
}

enum EstadoUsuario {
    ACTIVO = 0;
    INACTIVO = 1;
    SUSPENDIDO = 2;
}

//Definicion del Usuario
message Usuario {
    int64 id = 1;
    string nombreUsuario = 2;
    string nombre = 3;
    string apellido = 4;
    string telefono = 5;
    string email = 6;
    Rol rol = 7;
	int64 fechaCreacion = 8;
    EstadoUsuario estado  = 9;
}

//Alta de un Usuario
message CrearUsuarioRequest {
	string nombreUsuario = 1;
	string nombre = 2;
	string apellido = 3;
	string telefono = 4;
	string email = 5;
	Rol rol = 6;
}

message RespuestaExito {
    string mensaje = 1;
    bool exito = 2;
}

//Obtener el usuario por id
message BuscarUsuarioPorIdRequest {
	int64 id = 1;
}

//Login de un usuario
message LoginData {
	string nombreUsuario = 1;
	string clave = 2;
}

message ListaUsuariosResponse {
    repeated Usuario usuarios = 1;
}

message ListarUsuariosRequest {
   EstadoUsuario estadoUsuario = 1;
}

message ActualizarUsuarioRequest {
  int64 id = 1;
  string nombreUsuario = 2;
  string nombre = 3;
  string apellido = 4;
  string telefono = 5;
  string email = 6;
  Rol rol = 7;
  EstadoUsuario estado = 8; // ACTIVO/INACTIVO
}

//Agregar mas entidades

//Servicio gRPC
service UsuarioService {
	rpc registrarUsuario(CrearUsuarioRequest) returns (Usuario);
	rpc actualizarUsuario(ActualizarUsuarioRequest) returns (Usuario);
	rpc desactivarUsuario(BuscarUsuarioPorIdRequest) returns (RespuestaExito);
	
	rpc buscarUsuarioPorId(BuscarUsuarioPorIdRequest) returns (Usuario);
    rpc listarUsuarios(ListarUsuariosRequest) returns (ListaUsuariosResponse);
	rpc autenticarUsuario (LoginData) returns (Usuario);
}
